local library = {}

function library:AddWindow(titleText, options)
    local main_color = options.main_color or Color3.fromRGB(41, 74, 122) -- Default color for the top bar and minimize button
    local min_size = options.min_size or Vector2.new(600, 350)
    local can_resize = options.can_resize or false

    -- Create the GUI container
    local player = game:GetService("Players").LocalPlayer
    local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
    gui.Name = "lume"

    -- Create the main frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, min_size.X, 0, min_size.Y)
    mainFrame.Position = UDim2.new(0.5, -min_size.X/2, 0.5, -min_size.Y/2)
    mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)  -- Main frame stays grey (unchanged)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = gui
    mainFrame.Active = true
    mainFrame.Draggable = true

    -- UICorner for rounded edges on the main frame
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = mainFrame

    -- Create the top bar
    local topBar = Instance.new("Frame")
    topBar.Size = UDim2.new(1, 0, 0, 30)
    topBar.BackgroundColor3 = main_color  -- Top bar color matches main_color
    topBar.BorderSizePixel = 0
    topBar.Parent = mainFrame

    -- Create the title label
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(0, 200, 1, 0)
    title.Position = UDim2.new(0, 10, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = titleText  -- Use the titleText argument
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Font = Enum.Font.GothamSemibold
    title.TextSize = 14
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = topBar

    -- Create the minimize button
    local minimizeButton = Instance.new("TextButton")
    minimizeButton.Size = UDim2.new(0, 30, 0, 30)
    minimizeButton.Position = UDim2.new(1, -35, 0, 0)
    minimizeButton.BackgroundColor3 = main_color  -- Minimize button color also changes to match top bar
    minimizeButton.Text = "-"
    minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    minimizeButton.Font = Enum.Font.GothamSemibold
    minimizeButton.TextSize = 18
    minimizeButton.BorderSizePixel = 0
    minimizeButton.Parent = topBar

    -- Create the content holder
    local contentHolder = Instance.new("Frame")
    contentHolder.Name = "ContentHolder"
    contentHolder.Size = UDim2.new(1, 0, 1, -30)
    contentHolder.Position = UDim2.new(0, 0, 0, 30)
    contentHolder.BackgroundTransparency = 1
    contentHolder.Parent = mainFrame

    -- TweenService setup (optional if you want animations)
    local TweenService = game:GetService("TweenService")
    local isMinimized = false

    -- Minimize button functionality
    minimizeButton.MouseButton1Click:Connect(function()
        isMinimized = not isMinimized
        contentHolder.Visible = not isMinimized

        local targetSize = isMinimized and UDim2.new(0, 600, 0, 30) or UDim2.new(0, 600, 0, 350)
        local tweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

        TweenService:Create(mainFrame, tweenInfo, {Size = targetSize}):Play()

        minimizeButton.Text = isMinimized and "+" or "-"
    end)

    -- Return window object or any other elements you'd like to use
    return {
        mainFrame = mainFrame,
        topBar = topBar,
        minimizeButton = minimizeButton,
        title = title
    }
end

local notificationYOffset = 0

function library:Notify(config)
    local title = config.Title or "Notification"
    local content = config.Content or ""
    local duration = config.Duration or 3

    local player = game:GetService("Players").LocalPlayer
    local gui = player:WaitForChild("PlayerGui")

    local screenGui = gui:FindFirstChild("NotifyGui") or Instance.new("ScreenGui")
    screenGui.Name = "NotifyGui"
    screenGui.IgnoreGuiInset = true
    screenGui.ResetOnSpawn = false
    screenGui.Parent = gui

    local holder = Instance.new("Frame")
    holder.Size = UDim2.new(0, 300, 0, 80)
    holder.Position = UDim2.new(1, 320, 1, -100 - notificationYOffset)
    holder.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    holder.BackgroundTransparency = 0.1
    holder.BorderSizePixel = 0
    holder.AnchorPoint = Vector2.new(1, 1)
    holder.Parent = screenGui

    local corner = Instance.new("UICorner", holder)
    corner.CornerRadius = UDim.new(0, 8)

    local stroke = Instance.new("UIStroke", holder)
    stroke.Color = Color3.fromRGB(255, 80, 80)
    stroke.Thickness = 1

    local titleLabel = Instance.new("TextLabel", holder)
    titleLabel.Text = title
    titleLabel.Size = UDim2.new(1, -20, 0, 25)
    titleLabel.Position = UDim2.new(0, 10, 0, 5)
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.Font = Enum.Font.GothamSemibold
    titleLabel.TextSize = 16
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left

    local contentLabel = Instance.new("TextLabel", holder)
    contentLabel.Text = content
    contentLabel.Size = UDim2.new(1, -20, 0, 40)
    contentLabel.Position = UDim2.new(0, 10, 0, 30)
    contentLabel.BackgroundTransparency = 1
    contentLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    contentLabel.Font = Enum.Font.Gotham
    contentLabel.TextSize = 14
    contentLabel.TextWrapped = true
    contentLabel.TextXAlignment = Enum.TextXAlignment.Left
    contentLabel.TextYAlignment = Enum.TextYAlignment.Top

    local tweenService = game:GetService("TweenService")
    local inTween = tweenService:Create(holder, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        Position = UDim2.new(1, -20, 1, -100 - notificationYOffset)
    })

    local outTween = tweenService:Create(holder, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
        Position = UDim2.new(1, 320, 1, -100 - notificationYOffset)
    })

    inTween:Play()

    notificationYOffset += 90

    task.delay(duration, function()
        outTween:Play()
        outTween.Completed:Wait()
        holder:Destroy()
        notificationYOffset -= 90
    end)
end

return library
